// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieAPI.Data;

namespace MovieAPI.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    partial class MoviesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieAPI.Models.Creation", b =>
                {
                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("DirectorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Creation");

                    b.HasData(
                        new
                        {
                            DirectorId = 1,
                            MovieId = 4
                        },
                        new
                        {
                            DirectorId = 1,
                            MovieId = 9
                        },
                        new
                        {
                            DirectorId = 1,
                            MovieId = 11
                        },
                        new
                        {
                            DirectorId = 1,
                            MovieId = 14
                        },
                        new
                        {
                            DirectorId = 2,
                            MovieId = 3
                        },
                        new
                        {
                            DirectorId = 3,
                            MovieId = 3
                        },
                        new
                        {
                            DirectorId = 4,
                            MovieId = 2
                        },
                        new
                        {
                            DirectorId = 4,
                            MovieId = 5
                        },
                        new
                        {
                            DirectorId = 4,
                            MovieId = 13
                        },
                        new
                        {
                            DirectorId = 4,
                            MovieId = 16
                        },
                        new
                        {
                            DirectorId = 5,
                            MovieId = 1
                        },
                        new
                        {
                            DirectorId = 5,
                            MovieId = 6
                        },
                        new
                        {
                            DirectorId = 5,
                            MovieId = 7
                        },
                        new
                        {
                            DirectorId = 5,
                            MovieId = 10
                        },
                        new
                        {
                            DirectorId = 6,
                            MovieId = 8
                        },
                        new
                        {
                            DirectorId = 6,
                            MovieId = 12
                        },
                        new
                        {
                            DirectorId = 6,
                            MovieId = 15
                        },
                        new
                        {
                            DirectorId = 6,
                            MovieId = 18
                        },
                        new
                        {
                            DirectorId = 7,
                            MovieId = 17
                        },
                        new
                        {
                            DirectorId = 7,
                            MovieId = 19
                        },
                        new
                        {
                            DirectorId = 7,
                            MovieId = 20
                        },
                        new
                        {
                            DirectorId = 8,
                            MovieId = 17
                        },
                        new
                        {
                            DirectorId = 8,
                            MovieId = 19
                        },
                        new
                        {
                            DirectorId = 8,
                            MovieId = 20
                        });
                });

            modelBuilder.Entity("MovieAPI.Models.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Christopher",
                            LastName = "Nolan"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Lana",
                            LastName = "Wachowski"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Lilly",
                            LastName = "Wachowski"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Quentin",
                            LastName = "Tarantino"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Tim",
                            LastName = "Burton"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Edgar",
                            LastName = "Wright"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Anthony",
                            LastName = "Russo"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Joseph",
                            LastName = "Russo"
                        });
                });

            modelBuilder.Entity("MovieAPI.Models.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "The Nightmare Before Christmas",
                            ReleaseDate = new DateTime(1993, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 2,
                            Name = "Pulp Fiction",
                            ReleaseDate = new DateTime(1994, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 3,
                            Name = "Matrix",
                            ReleaseDate = new DateTime(1999, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 4,
                            Name = "Memento",
                            ReleaseDate = new DateTime(2000, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 5,
                            Name = "Kill Bill",
                            ReleaseDate = new DateTime(2003, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 6,
                            Name = "Charlie and the Chocolate Factory",
                            ReleaseDate = new DateTime(2005, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 7,
                            Name = "Corpse Bride",
                            ReleaseDate = new DateTime(2005, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 8,
                            Name = "Hot Fuzz",
                            ReleaseDate = new DateTime(2007, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 9,
                            Name = "The Dark Knight",
                            ReleaseDate = new DateTime(2008, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 10,
                            Name = "Alice in Wonderland",
                            ReleaseDate = new DateTime(2010, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 11,
                            Name = "Inception",
                            ReleaseDate = new DateTime(2010, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 12,
                            Name = "Scott Pilgrim vs. the World",
                            ReleaseDate = new DateTime(2010, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 13,
                            Name = "Django Unchained",
                            ReleaseDate = new DateTime(2012, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 14,
                            Name = "Interstellar",
                            ReleaseDate = new DateTime(2014, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 15,
                            Name = "Ant-Man",
                            ReleaseDate = new DateTime(2015, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 16,
                            Name = "The Hateful Eight",
                            ReleaseDate = new DateTime(2015, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 17,
                            Name = "Captain America: Civil War",
                            ReleaseDate = new DateTime(2016, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 18,
                            Name = "Baby Driver",
                            ReleaseDate = new DateTime(2017, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 19,
                            Name = "Avengers: Infinity War",
                            ReleaseDate = new DateTime(2018, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            id = 20,
                            Name = "Avengers: Endgame",
                            ReleaseDate = new DateTime(2019, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MovieAPI.Models.Creation", b =>
                {
                    b.HasOne("MovieAPI.Models.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieAPI.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
